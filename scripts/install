#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_supervisor
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

# Constant arguments
secret_key=$(ynh_string_random --length=32 | base64)
sender_mail="no-reply@${domain}"

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=path --value=$secret_key
ynh_app_setting_set --app=$app --key=path --value=$sender_mail

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
mkdir -p $final_path

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:$app "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# BUILD IHATEMONEY
#=================================================
ynh_script_progression --message="Building $app..."

pushd $final_path
    # Prepare venv
    python3 -m venv $final_path/venv
    source $final_path/venv/bin/activate

    # PyMySQL ? cryptography ? setuptools>=18.5
    # Required on Jessie, Stretch has setuptools>=18.5
    $final_path/venv/bin/pip install 'setuptools>=18.5'

    # SQLAlchemy requirement is workaround https://github.com/pallets/flask-sqlalchemy/issues/910
    # Might be removed later when IHM dependency set will no longer prevent working installation.
    $final_path/venv/bin/pip install --upgrade \
     'gunicorn>=19.3.0' \
     'PyMySQL>=0.9,<0.10' \
     'ihatemoney>=4,<5' \
     'SQLAlchemy<1.4'
popd

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

install -o $app -g $app -m 755 -d /var/log/$app /etc/$app

ynh_add_config --template="../conf/gunicorn.conf.py" --destination="/etc/$app/gunicorn.conf.py"

chmod 644 "/etc/$app/gunicorn.conf.py"
chown $app:$app "/etc/$app/gunicorn.conf.py"

ynh_add_config --template="../conf/ihatemoney.cfg" --destination="/etc/$app/ihatemoney.cfg"

chmod 400 "/etc/$app/ihatemoney.cfg"
chown $app:$app "/etc/$app/ihatemoney.cfg"

#=================================================
# SETUP SUPERVISOR
#=================================================
ynh_script_progression --message="Configuring a supervisor service..."

# Create a dedicated supervisor config
ynh_add_supervisor_config --service="$app" --template=ihatemoney.conf

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add "supervisor" --description="Supervisor daemon for $app" --log="/var/log/$app/${app}-horizon.log"

#=================================================
# START SUPERVISOR SERVICE
#=================================================
ynh_script_progression --message="Starting a supervisor service..."

# Start a supervisor service
ynh_supervisor_action --service_name=$app --action="reload" --log_path="systemd" --line_match="success: $app"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
